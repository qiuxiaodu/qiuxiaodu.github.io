<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo多平台更新博客</title>
    <url>/posts/67479147.html</url>
    <content><![CDATA[<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>首先将位于GitHub的源码，拉取到本地空白目录中</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>安装Git node hexo</p>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>如果没有报错，则说明安装没有问题</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>hexo clean<br>hexo g<br>hexo s  </p>
<h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><p>本地预览后没有问题，可以直接提交到GitHub上自动部署</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【PHP】面向对象</title>
    <url>/posts/6ab9e98b.html</url>
    <content><![CDATA[<h2 id="PHP面向对象"><a href="#PHP面向对象" class="headerlink" title="PHP面向对象"></a>PHP面向对象</h2>]]></content>
      <categories>
        <category>编程语言</category>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7设置虚拟内存的两种方式【分区】【文件】</title>
    <url>/posts/9dc38bda.html</url>
    <content><![CDATA[<h2 id="使用分区作为虚拟内存"><a href="#使用分区作为虚拟内存" class="headerlink" title="使用分区作为虚拟内存"></a>使用分区作为虚拟内存</h2><blockquote>
<p>Linux虚拟内存有两种方式：<br>1、使用分区作为虚拟内存。<br>2、使用一个文件作为虚拟内存  </p>
</blockquote>
<p>1、建立一个普通的Linux分区（主分区、逻辑分区均可）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@devops-fleming /]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">Disk /dev/vda: 44.0 GB, 44023414784 bytes, 85983232 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x000b1b45</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048    85983198    42990575+  83  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 85.9 GB, 85899345920 bytes, 167772160 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x990f0d05</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1            2048    83888127    41943040   83  Linux</span><br><span class="line">/dev/vdb2        83888128   125831167    20971520   83  Linux</span><br><span class="line">/dev/vdb3       125831168   167772159    20970496   83  Linux</span><br></pre></td></tr></table></figure>

<p>以<code>/dev/vdb3</code>设为虚拟内存为例，可以看到分区的十六进制编码是83，即普通的Linux分区，而swap分区的编码是82。</p>
<p>2、修改分区类型的十六进制编码，使用t命令改写分区十六进制编码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@devops-fleming /]<span class="comment"># fdisk /dev/vdb</span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t</span><br><span class="line">Partition number (1-3, default 3): 3</span><br><span class="line">Hex code (<span class="built_in">type</span> L to list all codes): 82</span><br><span class="line">Changed <span class="built_in">type</span> of partition <span class="string">&#x27;Linux&#x27;</span> to <span class="string">&#x27;Linux swap / Solaris&#x27;</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 85.9 GB, 85899345920 bytes, 167772160 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x990f0d05</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1            2048    83888127    41943040   83  Linux</span><br><span class="line">/dev/vdb2        83888128   125831167    20971520   83  Linux</span><br><span class="line">/dev/vdb3       125831168   167772159    20970496   82  Linux swap / Solaris</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure>
<p>可以看到<code>/dev/vdb3</code>的编码已经变成82 Linux swap / Solaris</p>
<p>3、格式化交换分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@devops-fleming /]<span class="comment"># mkswap /dev/vdb3</span></span><br><span class="line">Setting up swapspace version 1, size = 20970492 KiB</span><br><span class="line">no label, UUID=62976c8b-eeea-403c-914f-f6abfa735daf</span><br></pre></td></tr></table></figure>

<p>4、启用交换分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@devops-fleming /]<span class="comment"># swapon /dev/vdb3</span></span><br></pre></td></tr></table></figure>

<p>5、查看交换分区加载状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@devops-fleming /]<span class="comment"># free</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:        3880408      105288     2399132         500     1375988     3501300</span><br><span class="line">Swap:      20970492           0    20970492</span><br></pre></td></tr></table></figure>

<p>6、停用交换分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@izj6c1me2wu2lepyg9fhg5z ~]<span class="comment"># swapoff /dev/vdb3</span></span><br></pre></td></tr></table></figure>
<p>不能直接使用mount命令挂载swap分区，因为swap分区是没有挂载点的。</p>
<p>7、系统启动时自动挂载，修改<code>/etc/fstab</code>配置文件<br>/dev/vdb3 swap swap defaults 0 0</p>
<p>8、查看交换分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@devops-fleming /]<span class="comment"># swapon -s</span></span><br><span class="line">Filename				Type		Size	Used	Priority</span><br><span class="line">/dev/vdb3                              	partition	20970492	0	-2</span><br></pre></td></tr></table></figure>

<h2 id="使用一个文件作为虚拟内存"><a href="#使用一个文件作为虚拟内存" class="headerlink" title="使用一个文件作为虚拟内存"></a>使用一个文件作为虚拟内存</h2><p>1、生成一个8GB的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/mnt/swapadd bs=8M count=1024</span><br></pre></td></tr></table></figure>
<p>bs为每块的大小，count为块的个数</p>
<p>2、格式化swap文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkswap /mnt/swapadd</span><br></pre></td></tr></table></figure>

<p>3、修改权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 600  /mnt/swapadd</span><br></pre></td></tr></table></figure>

<p>4、挂载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapon /mnt/swapadd</span><br></pre></td></tr></table></figure>

<p>5、查看当前的swap空间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure>

<p>6、开机自挂载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/mnt/swapadd swap swap defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意1、swap的文件尽量不要弄在/tmp下，/tmp只是一个临时目录，一不小心就删了，而且开机自动挂载的时候，如果是在/tmp目录下是挂在不上的。<br>注意2、虚拟内存是可以随时调整的，但是当磁盘快满了，需要减少虚拟内存的时候，记得一定要先卸载原来的swap（swapoff /mnt/swapadd ；rm -f /mnt/swapadd），要不然会当宕机的</p>
</blockquote>
]]></content>
      <categories>
        <category>运维</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Go语言</title>
    <url>/posts/a0724c38.html</url>
    <content><![CDATA[<blockquote>
<p>视频地址：<a href="https://www.bilibili.com/video/BV17Q4y1P7n9?p=1">https://www.bilibili.com/video/BV17Q4y1P7n9?p=1</a></p>
</blockquote>
<h2 id="P1-为什么要学习Go"><a href="#P1-为什么要学习Go" class="headerlink" title="P1 为什么要学习Go"></a>P1 为什么要学习Go</h2><ul>
<li>语法简介</li>
<li>开发效率高</li>
<li>执行性能好</li>
<li>面向薪资编程</li>
</ul>
<p>如何学习Go语言</p>
<ul>
<li>与其他编程语言对比学习</li>
<li>多写多写多写代码</li>
<li>在工作中使用Go语言</li>
<li>培养自主学习能力：文档、代码</li>
</ul>
<h2 id="P2-课上所用物料介绍"><a href="#P2-课上所用物料介绍" class="headerlink" title="P2 课上所用物料介绍"></a>P2 课上所用物料介绍</h2><p>预习URL:<a href="https://www.liwenzhou.com/posts/Go/go_menu/">李文周的博客</a></p>
<p>课后作业：路飞学成账号，每周作业要求</p>
<h2 id="P3-安装Go开发包"><a href="#P3-安装Go开发包" class="headerlink" title="P3 安装Go开发包"></a>P3 安装Go开发包</h2><p>官网下载最近的安装包</p>
<p>验证：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go version</span><br><span class="line">go version go1.15.4 windows/amd64</span><br></pre></td></tr></table></figure>

<h2 id="P4-配置GOPATH"><a href="#P4-配置GOPATH" class="headerlink" title="P4 配置GOPATH"></a>P4 配置GOPATH</h2><p>查看go相关的环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go env</span><br><span class="line"><span class="built_in">set</span> GO111MODULE=</span><br><span class="line"><span class="built_in">set</span> GOARCH=amd64</span><br><span class="line"><span class="built_in">set</span> GOBIN=</span><br><span class="line"><span class="built_in">set</span> GOCACHE=C:\Users\球小嘟\AppData\Local\go-build</span><br><span class="line"><span class="built_in">set</span> GOENV=C:\Users\球小嘟\AppData\Roaming\go\env</span><br><span class="line"><span class="built_in">set</span> GOEXE=.exe</span><br><span class="line"><span class="built_in">set</span> GOFLAGS=</span><br><span class="line"><span class="built_in">set</span> GOHOSTARCH=amd64</span><br><span class="line"><span class="built_in">set</span> GOHOSTOS=windows</span><br><span class="line"><span class="built_in">set</span> GOINSECURE=</span><br><span class="line"><span class="built_in">set</span> GOMODCACHE=D:\go\pkg\mod</span><br><span class="line"><span class="built_in">set</span> GONOPROXY=</span><br><span class="line"><span class="built_in">set</span> GONOSUMDB=</span><br><span class="line"><span class="built_in">set</span> GOOS=windows</span><br><span class="line"><span class="built_in">set</span> GOPATH=D:\go</span><br><span class="line"><span class="built_in">set</span> GOPRIVATE=</span><br><span class="line"><span class="built_in">set</span> GOPROXY=https://proxy.golang.org,direct</span><br><span class="line"><span class="built_in">set</span> GOROOT=c:\go</span><br><span class="line"><span class="built_in">set</span> GOSUMDB=sum.golang.org</span><br><span class="line"><span class="built_in">set</span> GOTMPDIR=</span><br><span class="line"><span class="built_in">set</span> GOTOOLDIR=c:\go\pkg\tool\windows_amd64</span><br><span class="line"><span class="built_in">set</span> GCCGO=gccgo</span><br><span class="line"><span class="built_in">set</span> AR=ar</span><br><span class="line"><span class="built_in">set</span> CC=gcc</span><br><span class="line"><span class="built_in">set</span> CXX=g++</span><br><span class="line"><span class="built_in">set</span> CGO_ENABLED=1</span><br><span class="line"><span class="built_in">set</span> GOMOD=</span><br><span class="line"><span class="built_in">set</span> CGO_CFLAGS=-g -O2</span><br><span class="line"><span class="built_in">set</span> CGO_CPPFLAGS=</span><br><span class="line"><span class="built_in">set</span> CGO_CXXFLAGS=-g -O2</span><br><span class="line"><span class="built_in">set</span> CGO_FFLAGS=-g -O2</span><br><span class="line"><span class="built_in">set</span> CGO_LDFLAGS=-g -O2</span><br><span class="line"><span class="built_in">set</span> PKG_CONFIG=pkg-config</span><br><span class="line"><span class="built_in">set</span> GOGCCFLAGS=-m64 -mthreads -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=C:\Users\球小嘟\AppData\Local\Temp\go-build871583214=/tmp/go-build -gno-record-gcc-switches</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="P5-Go项目目录结构介绍"><a href="#P5-Go项目目录结构介绍" class="headerlink" title="P5 Go项目目录结构介绍"></a>P5 Go项目目录结构介绍</h2><h2 id="P6-安装VSCode编辑器"><a href="#P6-安装VSCode编辑器" class="headerlink" title="P6 安装VSCode编辑器"></a>P6 安装VSCode编辑器</h2><p>插件：</p>
<ul>
<li>Chinese</li>
<li>go</li>
</ul>
<p>配置教程：<a href="https://www.liwenzhou.com/posts/Go/00_go_in_vscode/">https://www.liwenzhou.com/posts/Go/00_go_in_vscode/</a></p>
<h2 id="P7-编写第一个Go语言程序"><a href="#P7-编写第一个Go语言程序" class="headerlink" title="P7 编写第一个Go语言程序"></a>P7 编写第一个Go语言程序</h2><p>编译</p>
<p>使用go  build</p>
<ol>
<li><p>在项目目录下执行go build</p>
</li>
<li><p>在其他路径下执行go build , 需要在后面加上项目的路径（项目路径从GOPATH/src后开始写起，编译之后的可执行文件就保存在当前目录下）</p>
</li>
</ol>
<h2 id="P8-变量声明"><a href="#P8-变量声明" class="headerlink" title="P8 变量声明"></a>P8 变量声明</h2><h2 id="P9-变量赋值"><a href="#P9-变量赋值" class="headerlink" title="P9 变量赋值"></a>P9 变量赋值</h2>]]></content>
      <categories>
        <category>go</category>
      </categories>
      <tags>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建</title>
    <url>/posts/b8f4bd70.html</url>
    <content><![CDATA[<h2 id="基础环境搭建"><a href="#基础环境搭建" class="headerlink" title="基础环境搭建"></a>基础环境搭建</h2><p>1、Git<br>在<a href="https://git-scm.com/downloads">Git官网</a>下载后，安装。<br>查看是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">git version 2.21.0.windows.1</span><br></pre></td></tr></table></figure>

<p>2、安装Node<br>在<a href="https://nodejs.org/zh-cn/download/">Node官网</a>上下载LTS版windows的msi安装包64-bit<br>查看node和npm的版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ node --version</span><br><span class="line">v12.19.0</span><br><span class="line"></span><br><span class="line">$ npm --version</span><br><span class="line">6.14.8</span><br></pre></td></tr></table></figure>

<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p><a href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a><br>1、npm安装Hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<blockquote>
<p>npm install常用的参数<br>-g<br>  –global，缩写为-g，表示安装包时，视作全局的包。安装之后的包将位于系统预设的目录之下，一般来说<br>  -S<br>  –save，缩写为-S，表示安装的包将写入package.json里面的dependencies。<br>  -D<br>  –save-dev，缩写为-D，表示将安装的包将写入packege.json里面的devDependencies。<br>  -O<br>  –save-optional缩写为-O，表示将安装的包将写入packege.json里面的optionalDependencies。<br>  -E<br>  –save-exact缩写为-E，表示安装的包的版本是精确指定的。<br>  -B<br>  –save-bundle缩写为-B，表示将安装的包将写入packege.json里面的bundleDependencies</p>
</blockquote>
<p>2、初始化目录为Hexo框架</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h2 id="源码推送到GitHub"><a href="#源码推送到GitHub" class="headerlink" title="源码推送到GitHub"></a>源码推送到GitHub</h2><p>1、本地初始化Git管理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ git init</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;First Commit&quot;</span></span><br><span class="line">$ git remote add origin git@github.com:qiuxiaodu/blog-backup.git <span class="comment">#将本地仓库和GitHub上的仓库进行关联</span></span><br></pre></td></tr></table></figure>

<h2 id="使用Github-Action自动部署到GitHub-Pages"><a href="#使用Github-Action自动部署到GitHub-Pages" class="headerlink" title="使用Github Action自动部署到GitHub Pages"></a>使用Github Action自动部署到GitHub Pages</h2><p>1、生成密钥（在本地计算机中执行）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -f ~/.ssh/GitHub-actions-deploy</span><br><span class="line">-rw-r--r-- 1 xxxx 197121 3389 10月 21 23:47 GitHub-actions-deploy</span><br><span class="line">-rw-r--r-- 1 xxxx 197121  749 10月 21 23:47 GitHub-actions-deploy.pub</span><br></pre></td></tr></table></figure>
<p>生成两个文件<code>GitHub-actions-deploy</code>是私钥文件，<code>GitHub-actions-deploy.pub</code>是公钥文件</p>
<blockquote>
<p>ssh-keygen是SSH服务下的一个生成、管理和转换认证密钥的命令工具。包括两种密钥类型DSA和RSA<br>通过公私钥的验证可以使服务器与服务器之间实现无密码通讯。<br>ssh-keygen常用参数<br><code>-t</code>：指定生成密钥的类型，默认使用SSH2d的rsa<br><code>-f</code>：指定生成密钥的文件名，默认id_rsa（私钥id_rsa，公钥id_rsa.pub）<br>-P：提供旧密码，空表示不需要密码（-P ‘’）<br>-N：提供新密码，空表示不需要密码(-N ‘’)<br><code>-b</code>：指定密钥长度（bits），RSA最小要求768位，默认是2048位；DSA密钥必须是1024位（FIPS 1862标准规定）<br>-C：提供一个新注释<br>-R hostname：从known_hosta（第一次连接时就会在家目录.ssh目录下生产该密钥文件）文件中删除所有属于hostname的密钥  </p>
</blockquote>
<p>2、在GitHub Pages所在的仓库（即user.github.io）添加公钥<br>找到仓库的<code>Settings</code> -&gt; <code>Deploy keys</code> -&gt; <code>Add deploy key</code></p>
<ul>
<li>Title 填入：ACTION_DEPLOY_KEY</li>
<li>Key 填入：步骤1生成的密钥对中的公钥<br>勾上 Allow write access</li>
</ul>
<p>3、在存放Hexo源文件的仓库中（即blog-source 私有仓库）添加私钥<br>找到仓库的<code>Settings</code> -&gt; <code>Secrets</code> -&gt; <code>New secret</code></p>
<ul>
<li>Name 填入：ACTION_DEPLOY_KEY</li>
<li>Value 填入：步骤1生成的密钥对中的私钥</li>
</ul>
<p>4、在本地Hexo根目录下新建.github/workflows/blank.yml文件,也可以在GitHub上blog-source仓库的<code>Actions</code>-&gt;<code>Set up this workflow</code>中输入然后提交到master分支</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span> <span class="string">Hexo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">node-version:</span> [<span class="number">10.</span><span class="string">x</span>]</span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">开始运行</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">设置</span> <span class="string">Node.js</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置</span> <span class="string">Git</span> <span class="string">环境</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">ACTION_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;secrets.ACTION_DEPLOY_KEY&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">          <span class="string">echo</span> <span class="string">&quot;$ACTION_DEPLOY_KEY&quot;</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">          <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">          <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&quot;userName&quot;</span> <span class="comment">#这里更改为自己的名字</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&quot;userName@xxx.com&quot;</span> <span class="comment">#这里更改为自己的邮箱</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span> <span class="string">CI</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">export</span> <span class="string">TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">i</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">i</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装插件</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-deployer-git</span> <span class="string">--save</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-renderer-pug</span> <span class="string">hexo-renderer-stylus</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署博客</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">rm</span> <span class="string">-rf</span> <span class="string">.deploy_git</span></span><br><span class="line">          <span class="string">hexo</span> <span class="string">g</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">douban</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br><span class="line">          <span class="string">rm</span> <span class="string">~/.ssh/id_rsa</span></span><br></pre></td></tr></table></figure>

<p>5、更改脚本中的仓库个人信息<br>git config –global user.name “userName” #这里更改为自己的名字<br>git config –global user.email “<a href="mailto:&#x75;&#x73;&#x65;&#114;&#x4e;&#97;&#109;&#101;&#64;&#x78;&#x78;&#120;&#46;&#x63;&#x6f;&#109;">&#x75;&#x73;&#x65;&#114;&#x4e;&#97;&#109;&#101;&#64;&#x78;&#x78;&#120;&#46;&#x63;&#x6f;&#109;</a>“ #这里更改为自己的邮箱</p>
<p>6、更改脚本中的插件<br>脚本中插件部分可按自己实际用的插件删改，<code>npm ls --depth 0</code>可查看自己本地安装了哪些插件，按照实际替换脚本中的插件</p>
<p>7、git push<br>文章写好后，不需要在本地构建，只需要 <code>git push</code>到GitHub仓库私有仓库（blog-source）即可自动部署。其中部署方式在Hexo根目录的<code>_config.yml</code>中配置。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:userName/userName.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>8、验证脚本是否正确运行<br>在私有仓库blog-source的Actions下可以看到脚本的执行情况，点进去还可以看到每一步的执行log</p>
<p>9、参考：<a href="https://eallion.com/github-actions-hexo-ci/">GitHub Actions 自动部署 Hexo 脚本</a></p>
<h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull origin master <span class="comment"># 首先拉取远程仓库的代码</span></span><br><span class="line">$ git push -u origin master <span class="comment"># 推送本地代码到远程仓库</span></span><br></pre></td></tr></table></figure>

<h2 id="Butterfly主题"><a href="#Butterfly主题" class="headerlink" title="Butterfly主题"></a>Butterfly主题</h2><h3 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h3><p>1、首先生成相册的page页</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page Gallery</span><br></pre></td></tr></table></figure>
<p>2、在其index.md文件中输入</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup &#x27;壁紙&#x27; &#x27;收藏的一些壁紙&#x27; &#x27;/Gallery/wallpaper&#x27; https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;漫威&#x27; &#x27;關於漫威的圖片&#x27; &#x27;/Gallery/marvel&#x27; https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;OH MY GIRL&#x27; &#x27;關於OH MY GIRL的圖片&#x27; &#x27;/Gallery/ohmygirl&#x27; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>3、生成子相册</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page wallpaper</span><br></pre></td></tr></table></figure>
<p>4、在其index.md文件中输入</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure>
<p>5、将生成的子相册文件夹移动到Gallery中</p>
<h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA更换Terminal设置为GitBash</title>
    <url>/posts/6e2ce1bd.html</url>
    <content><![CDATA[<p>Windows下Terminal默认的使用的是系统自带的cmd，功能实在太少，用起来远不如Git Bash来得方利和高效。其实要在Goland的Terminal中使用Bash设置起来也很简单，设置位置在Settings &gt; Tools &gt; Terminal &gt; Shell_path</p>
<p>这里是设置为：”C:\Program Files\Git\bin\sh.exe” –login -i</p>
<p>其中”C:\Program Files\Git\bin\sh.exe” 这个是Git安装目录下sh.exe执行文件所在的位置（请设置为自己的实际对应目录）；–login -i（可选） 这是启动设置。</p>
<p>设置完成后重新开一个Terminal就可以用上了。</p>
]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux好用的命令</title>
    <url>/posts/undefined.html</url>
    <content><![CDATA[<h2 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h2><blockquote>
<p>它类似于 top 命令，但可以让你在垂直和水平方向上滚动，所以你可以看到系统上运行的所有进程，以及他们完整的命令行。</p>
</blockquote>
<p>CentOS7.X系统版本为例,使用yum下载安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装epel源</span></span><br><span class="line">yum install epel-release</span><br><span class="line"><span class="comment">#安装htop</span></span><br><span class="line">yum install -y htop</span><br><span class="line"><span class="comment">#安装完毕后命令行输入</span></span><br><span class="line">htop</span><br></pre></td></tr></table></figure>

<p>使用参考：</p>
<ul>
<li><a href="https://blog.csdn.net/qq_34672033/article/details/89735983">https://blog.csdn.net/qq_34672033/article/details/89735983</a></li>
<li><a href="https://linux.cn/article-3141-1.html">https://linux.cn/article-3141-1.html</a></li>
<li><a href="https://www.cnblogs.com/programmer-tlh/p/11726016.html">https://www.cnblogs.com/programmer-tlh/p/11726016.html</a></li>
<li><a href="http://blog.51cto.com/wuhf2015/1633220">http://blog.51cto.com/wuhf2015/1633220</a></li>
<li><a href="http://jyxnt.blog.51cto.com/9581167/1586708">http://jyxnt.blog.51cto.com/9581167/1586708</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Vagrant使用</title>
    <url>/posts/49ffe21d.html</url>
    <content><![CDATA[<blockquote>
<p>Vagrant需要一个虚拟化平台才能工作。虽然它支持多种虚拟化平台，但是推荐VirtualBox。</p>
</blockquote>
<h2 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="VirtualBox"></a>VirtualBox</h2><p>在<a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox官网</a>上选择合适的下载安装即可，这里我选择的是VirtualBox 6.1.16 platform packages<a href="https://download.virtualbox.org/virtualbox/6.1.16/VirtualBox-6.1.16-140961-Win.exe"> Windows hosts</a></p>
<h2 id="Vagrant"><a href="#Vagrant" class="headerlink" title="Vagrant"></a>Vagrant</h2><p>在<a href="https://www.vagrantup.com/downloads">Vagrant官网</a>上选择合适的版本下载安装即可，这里我选择的是Windows 64-bit</p>
<p>验证是否安装成功，在bash中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant -v</span><br></pre></td></tr></table></figure>

<p>有输出则代表安装成功</p>
<h2 id="本地导入"><a href="#本地导入" class="headerlink" title="本地导入"></a>本地导入</h2><p>由于防火墙，导致直接下载慢，所以先下载.box文件，导入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fleming@DESKTOP-PNOCFH1 MINGW64 /m/virtualbox-centos7-base</span><br><span class="line">$ vagrant box add centos7 CentOS-7-x86_64-Vagrant-1905_01.VirtualBox.box</span><br><span class="line">==&gt; box: Box file was not detected as metadata. Adding it directly...</span><br><span class="line">==&gt; box: Adding box <span class="string">&#x27;centos7&#x27;</span> (v0) <span class="keyword">for</span> provider:</span><br><span class="line">    box: Unpacking necessary files from: file://M:/virtualbox-centos7-base/CentOS-7-x86_64-Vagrant-1905_01.VirtualBox.box</span><br><span class="line">    box:</span><br><span class="line">The box you<span class="string">&#x27;re attempting to add already exists. Remove it before</span></span><br><span class="line"><span class="string">adding it again or add it with the `--force` flag.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Name: centos7</span></span><br><span class="line"><span class="string">Provider: virtualbox</span></span><br><span class="line"><span class="string">Version: 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fleming@DESKTOP-PNOCFH1 MINGW64 /m/virtualbox-centos7-base</span></span><br><span class="line"><span class="string">$ vagrant box add centos7 CentOS-7-x86_64-Vagrant-1905_01.VirtualBox.box</span></span><br><span class="line"><span class="string">==&gt; box: Box file was not detected as metadata. Adding it directly...</span></span><br><span class="line"><span class="string">==&gt; box: Adding box &#x27;</span>centos7<span class="string">&#x27; (v0) for provider:</span></span><br><span class="line"><span class="string">    box: Unpacking necessary files from: file://M:/virtualbox-centos7-base/CentOS-7-x86_64-Vagrant-1905_01.VirtualBox.box</span></span><br><span class="line"><span class="string">    box:</span></span><br><span class="line"><span class="string">==&gt; box: Successfully added box &#x27;</span>centos7<span class="string">&#x27; (v0) for &#x27;</span>virtualbox<span class="string">&#x27;!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fleming@DESKTOP-PNOCFH1 MINGW64 /m/virtualbox-centos7-base</span></span><br><span class="line"><span class="string">$ vagrant init centos7</span></span><br><span class="line"><span class="string">A `Vagrantfile` has been placed in this directory. You are now</span></span><br><span class="line"><span class="string">ready to `vagrant up` your first virtual environment! Please read</span></span><br><span class="line"><span class="string">the comments in the Vagrantfile as well as documentation on</span></span><br><span class="line"><span class="string">`vagrantup.com` for more information on using Vagrant.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fleming@DESKTOP-PNOCFH1 MINGW64 /m/virtualbox-centos7-base</span></span><br><span class="line"><span class="string">$ vagrant up</span></span><br><span class="line"><span class="string">Bringing machine &#x27;</span>default<span class="string">&#x27; up with &#x27;</span>virtualbox<span class="string">&#x27; provider...</span></span><br><span class="line"><span class="string">==&gt; default: Importing base box &#x27;</span>centos7<span class="string">&#x27;...</span></span><br><span class="line"><span class="string">==&gt; default: Matching MAC address for NAT networking...</span></span><br><span class="line"><span class="string">==&gt; default: Setting the name of the VM: virtualbox-centos7-base_default_1604218492429_90146</span></span><br><span class="line"><span class="string">==&gt; default: Clearing any previously set network interfaces...</span></span><br><span class="line"><span class="string">==&gt; default: Preparing network interfaces based on configuration...</span></span><br><span class="line"><span class="string">    default: Adapter 1: nat</span></span><br><span class="line"><span class="string">==&gt; default: Forwarding ports...</span></span><br><span class="line"><span class="string">    default: 22 (guest) =&gt; 2222 (host) (adapter 1)</span></span><br><span class="line"><span class="string">==&gt; default: Booting VM...</span></span><br><span class="line"><span class="string">==&gt; default: Waiting for machine to boot. This may take a few minutes...</span></span><br><span class="line"><span class="string">    default: SSH address: 127.0.0.1:2222</span></span><br><span class="line"><span class="string">    default: SSH username: vagrant</span></span><br><span class="line"><span class="string">    default: SSH auth method: private key</span></span><br><span class="line"><span class="string">    default:</span></span><br><span class="line"><span class="string">    default: Vagrant insecure key detected. Vagrant will automatically replace</span></span><br><span class="line"><span class="string">    default: this with a newly generated keypair for better security.</span></span><br><span class="line"><span class="string">    default:</span></span><br><span class="line"><span class="string">    default: Inserting generated public key within guest...</span></span><br><span class="line"><span class="string">    default: Removing insecure key from the guest if it&#x27;</span>s present...</span><br><span class="line">    default: Key inserted! Disconnecting and reconnecting using new SSH key...</span><br><span class="line">==&gt; default: Machine booted and ready!</span><br><span class="line">==&gt; default: Checking <span class="keyword">for</span> guest additions <span class="keyword">in</span> VM...</span><br><span class="line">    default: No guest additions were detected on the base box <span class="keyword">for</span> this VM! Guest</span><br><span class="line">    default: additions are required <span class="keyword">for</span> forwarded ports, shared folders, host only</span><br><span class="line">    default: networking, and more. If SSH fails on this machine, please install</span><br><span class="line">    default: the guest additions and repackage the box to <span class="built_in">continue</span>.</span><br><span class="line">    default:</span><br><span class="line">    default: This is not an error message; everything may <span class="built_in">continue</span> to work properly,</span><br><span class="line">    default: <span class="keyword">in</span> <span class="built_in">which</span> <span class="keyword">case</span> you may ignore this message.</span><br><span class="line">==&gt; default: Rsyncing folder: /cygdrive/m/virtualbox-centos7-base/ =&gt; /vagrant</span><br></pre></td></tr></table></figure>

<p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vagrant ssh</span><br><span class="line">[vagrant@localhost ~]$ <span class="built_in">pwd</span></span><br><span class="line">/home/vagrant</span><br></pre></td></tr></table></figure>

<h2 id="挂载本地目录到Vagrant镜像"><a href="#挂载本地目录到Vagrant镜像" class="headerlink" title="挂载本地目录到Vagrant镜像"></a>挂载本地目录到Vagrant镜像</h2><p>  修改项目下的Vagrantfile文件，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config.vm.synced_folder &quot;..&#x2F;data&quot;, &quot;&#x2F;vagrant_data&quot;</span><br></pre></td></tr></table></figure>

<p>然后在本地物理机器中执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant reload</span><br></pre></td></tr></table></figure>

<h2 id="安装LNMP"><a href="#安装LNMP" class="headerlink" title="安装LNMP"></a>安装LNMP</h2><p>这个功能只是按照教程安装了下，具体的不是很清楚原理，现在可以使用，后面需要的话详细的了解下。</p>
<p>参考：</p>
<p><a href="https://www.cnblogs.com/zqsb/p/10916989.html">https://www.cnblogs.com/zqsb/p/10916989.html</a></p>
]]></content>
      <categories>
        <category>vagrant</category>
      </categories>
      <tags>
        <tag>vagrant</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10+360随身wifi+privoxy实现多设备上网</title>
    <url>/posts/216c8ac7.html</url>
    <content><![CDATA[<p>参考:<a href="https://program-think.medium.com/%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E5%A6%82%E4%BD%95%E5%85%B1%E4%BA%AB%E7%BF%BB%E5%A2%99%E9%80%9A%E9%81%93-638b24885829">https://program-think.medium.com/%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E5%A6%82%E4%BD%95%E5%85%B1%E4%BA%AB%E7%BF%BB%E5%A2%99%E9%80%9A%E9%81%93-638b24885829</a></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>windows10</li>
<li>360随身wifi开热点</li>
<li>privoxy</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>打开vpn的设置按钮，开启<code>允许其他设备连接本地代理</code></li>
<li>安装360随身wifi，设置热点账号密码</li>
<li>下载安装privoxy，安装完成后，修改<code>Main Configuration</code>，在文件末尾添加</li>
</ol>
<p>forward  /  127.0.0.1:41081<br>listen-address  0.0.0.0:41080</p>
<ol start="4">
<li>手机连接WiFi热点，点击<code>代理</code>选择<code>手动</code>输入服务器IP:192.168.0.100,输入端口：41080即可</li>
<li>连接google测试一下</li>
</ol>
]]></content>
      <categories>
        <category>wifi</category>
      </categories>
      <tags>
        <tag>wifi</tag>
      </tags>
  </entry>
  <entry>
    <title>go语言基础知识学习</title>
    <url>/posts/6aebcba7.html</url>
    <content><![CDATA[<blockquote>
<p>参考的博客：<a href="https://www.liwenzhou.com/posts/Go/go_menu/">李文周</a></p>
</blockquote>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h2 id="练习-分金币"><a href="#练习-分金币" class="headerlink" title="练习-分金币"></a>练习-分金币</h2><blockquote>
<p>你有50枚金币，需要分配给以下几个人：<br>Matthew,Sarah,Augustus,Heidi,Emilie,Peter,Giana,Adriano,Aaron,Elizabeth。<br>分配规则如下：<br>a. 名字中每包含1个’e’或’E’分1枚金币<br>b. 名字中每包含1个’i’或’I’分2枚金币<br>c. 名字中每包含1个’o’或’O’分3枚金币<br>d: 名字中每包含1个’u’或’U’分4枚金币<br>写一个程序，计算每个用户分到多少金币，以及最后剩余多少金币？<br>程序结构如下，请实现 ‘dispatchCoin’ 函数</p>
</blockquote>
<p>程序实现</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	coins = <span class="number">50</span></span><br><span class="line">	users = []<span class="keyword">string</span>&#123;</span><br><span class="line">		<span class="string">&quot;Matthew&quot;</span>, <span class="string">&quot;Sarah&quot;</span>, <span class="string">&quot;Augustus&quot;</span>, <span class="string">&quot;Heidi&quot;</span>, <span class="string">&quot;Emilie&quot;</span>, <span class="string">&quot;Peter&quot;</span>, <span class="string">&quot;Giana&quot;</span>, <span class="string">&quot;Adriano&quot;</span>, <span class="string">&quot;Aaron&quot;</span>, <span class="string">&quot;Elizabeth&quot;</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	distribution = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>, <span class="built_in">len</span>(users))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	left := dispatchCoin()</span><br><span class="line">	fmt.Println(<span class="string">&quot;剩下：&quot;</span>, left)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、遍历每个人</span></span><br><span class="line"><span class="comment"> * 2、检查每个人中包含的名字</span></span><br><span class="line"><span class="comment"> * 3、存储每个人的金币数</span></span><br><span class="line"><span class="comment"> * 4、计算剩下的金币数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">dispatchCoin</span><span class="params">()</span> <span class="title">int</span></span>&#123;</span><br><span class="line">	<span class="comment">// 1、遍历每个人</span></span><br><span class="line">	<span class="comment">// 2、检查每个人中包含的名字</span></span><br><span class="line">	<span class="comment">// 3、存储每个人的金币数</span></span><br><span class="line">	<span class="comment">// 4、计算剩下的金币数</span></span><br><span class="line">	<span class="keyword">for</span> _,v := <span class="keyword">range</span> users &#123;</span><br><span class="line">		distribution[v] = <span class="number">0</span></span><br><span class="line">		nameRoune := []<span class="keyword">rune</span>(v)</span><br><span class="line">		<span class="keyword">for</span> _,vv := <span class="keyword">range</span> nameRoune &#123;</span><br><span class="line">			<span class="keyword">if</span> vv == <span class="string">&#x27;e&#x27;</span> || vv == <span class="string">&#x27;E&#x27;</span> &#123;</span><br><span class="line">				distribution[v] += <span class="number">1</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> vv == <span class="string">&#x27;i&#x27;</span> || vv == <span class="string">&#x27;I&#x27;</span> &#123;</span><br><span class="line">				distribution[v] += <span class="number">2</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> vv == <span class="string">&#x27;o&#x27;</span> || vv == <span class="string">&#x27;O&#x27;</span> &#123;</span><br><span class="line">				distribution[v] += <span class="number">3</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> vv == <span class="string">&#x27;u&#x27;</span> || vv == <span class="string">&#x27;U&#x27;</span> &#123;</span><br><span class="line">				distribution[v] += <span class="number">4</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _,v := <span class="keyword">range</span> users &#123;</span><br><span class="line">		fmt.Printf(<span class="string">&quot;%s获得金币数目是%v\n&quot;</span>, v, distribution[v])</span><br><span class="line">		coins -= distribution[v]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> coins</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行后的结果</p>
<blockquote>
<p>Matthew获得金币数目是1<br>Sarah获得金币数目是0<br>Augustus获得金币数目是12<br>Heidi获得金币数目是5<br>Emilie获得金币数目是6<br>Peter获得金币数目是2<br>Giana获得金币数目是2<br>Adriano获得金币数目是5<br>Aaron获得金币数目是3<br>Elizabeth获得金币数目是4<br>剩下： 10</p>
</blockquote>
]]></content>
      <categories>
        <category>go</category>
      </categories>
      <tags>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title>tree命令列出目录结构</title>
    <url>/posts/253ab8ad.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>tree</tag>
      </tags>
  </entry>
  <entry>
    <title>【知识点】HTML</title>
    <url>/posts/7d5713e5.html</url>
    <content><![CDATA[<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>HTML标签不区分大小写，<code>&lt;h1&gt;</code>和<code>&lt;H1&gt;</code>是一样的。但是建议使用小写方式，因为大部分程序员都以小写为准。</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>【知识点】JavaScript</title>
    <url>/posts/66896ba0.html</url>
    <content><![CDATA[<h2 id="JSON-parse"><a href="#JSON-parse" class="headerlink" title="JSON.parse()"></a>JSON.parse()</h2><p>将jdon字符串转化为json对象  </p>
<h2 id="JSON-stringify"><a href="#JSON-stringify" class="headerlink" title="JSON.stringify()"></a>JSON.stringify()</h2><p>将json对象转换为json字符串</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>【知识点】Linux</title>
    <url>/posts/9f8fa4d8.html</url>
    <content><![CDATA[<h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><p>tar -zcvf 压缩包名.tar.gz 源文件  </p>
<blockquote>
<p>-z：压缩为.tar.gz格式<br>-c：打包<br>-v：显示过程<br>-f：指定打包后的文件名  </p>
</blockquote>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>tar -zxvf 压缩包名.tar.gz  </p>
<blockquote>
<p>-x：解压缩.tar.gz格式</p>
</blockquote>
<h2 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h2><p>scp /data3/cdn.tar.gz ip:/data3<br>1、输入密码<br>2、Ctrl+z 挂起当前进程<br>3、jobs 查看任务，返回任务编号和进程号<br>4、bg %n 将编号为n的任务转后台运行<br>5、fg %n 将编号为n的任务转前台运行<br>6、ctrl+c 结束当前任务  </p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>运维规范</title>
    <url>/posts/27388375.html</url>
    <content><![CDATA[<h2 id="续费"><a href="#续费" class="headerlink" title="续费"></a>续费</h2><h3 id="域名续费"><a href="#域名续费" class="headerlink" title="域名续费"></a>域名续费</h3><p>主要是在阿里云进行域名的购买和续费，期限为1-2年</p>
<h3 id="机器续费"><a href="#机器续费" class="headerlink" title="机器续费"></a>机器续费</h3><p>常用的机器续费为5年</p>
]]></content>
      <categories>
        <category>运维</category>
        <category>规范</category>
      </categories>
      <tags>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云磁盘在线扩容</title>
    <url>/posts/fba8c39.html</url>
    <content><![CDATA[<p>主要的操作步骤参考：<a href="https://help.aliyun.com/document_detail/25452.html?spm=a2c4g.11186623.2.25.fc254656s13thG#concept-z11-xsh-ydb">阿里云官方文档</a>  </p>
<h2 id="扩展已有MBR分区"><a href="#扩展已有MBR分区" class="headerlink" title="扩展已有MBR分区"></a>扩展已有MBR分区</h2><blockquote>
<p>说明 为了防止数据丢失，不建议扩容已挂载的分区和文件系统。请先取消挂载（umount）分区，完成扩容并正常使用后，重新挂载（mount）。针对不同的Linux内核版本，推荐以下操作方式：<br>实例内核版本 &lt; 3.6：先取消挂载该分区，再修改分区表，最后扩容文件系统。<br>实例内核版本 ≥ 3.6：先修改对应分区表，再通知内核更新分区表，最后扩容文件系统。  </p>
</blockquote>
<p>由于centos7的内核版本为3.10大于3.6所有支持在线扩容，无需卸载磁盘，无需重启实例</p>
<p>如果新增空间用于扩容已有的MBR分区，按照以下步骤在实例中完成扩容：  </p>
<h3 id="修改分区表"><a href="#修改分区表" class="headerlink" title="修改分区表"></a>修改分区表</h3><p>运行<code>fdisk -lu /dev/vdb</code>，并记录旧分区的起始和结束的扇区位置。本示例中，<code>/dev/vdb1</code>的起始扇区是2048，结束扇区是<code>41943039</code>。  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ecshost ~]<span class="comment"># fdisk -lu /dev/vdb</span></span><br><span class="line">Disk /dev/vdb: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x9277b47b</span><br><span class="line"></span><br><span class="line">Device Boot Start End Blocks Id System</span><br><span class="line">/dev/vdb1 2048 41943039 20970496 83 Linux</span><br></pre></td></tr></table></figure>

<h3 id="查看数据盘的挂载路径，根据返回的文件路径卸载分区，直至完全卸载已挂载的分区。（不需要做，直接第三步）"><a href="#查看数据盘的挂载路径，根据返回的文件路径卸载分区，直至完全卸载已挂载的分区。（不需要做，直接第三步）" class="headerlink" title="查看数据盘的挂载路径，根据返回的文件路径卸载分区，直至完全卸载已挂载的分区。（不需要做，直接第三步）"></a>查看数据盘的挂载路径，根据返回的文件路径卸载分区，直至完全卸载已挂载的分区。（不需要做，直接第三步）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ecshost ~]<span class="comment"># mount | grep &quot;/dev/vdb&quot;</span></span><br><span class="line">/dev/vdb1 on /mnt <span class="built_in">type</span> ext4 (rw,relatime,data=ordered)</span><br><span class="line">[root@ecshost ~]<span class="comment"># umount /dev/vdb1</span></span><br><span class="line">[root@ecshost ~]<span class="comment"># mount | grep &quot;/dev/vdb&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="使用fdisk工具删除旧分区。"><a href="#使用fdisk工具删除旧分区。" class="headerlink" title="使用fdisk工具删除旧分区。"></a>使用fdisk工具删除旧分区。</h3><p>运行<code>fdisk -u /dev/vdb</code>：分区数据盘。<br>输入p：打印分区表。<br>输入d：删除分区。<br>输入p：确认分区已删除。<br>输入w：保存修改并退出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ecshost ~]<span class="comment"># fdisk -u /dev/vdb</span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/vdb: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x9277b47b</span><br><span class="line">Device Boot Start End Blocks Id System</span><br><span class="line">/dev/vdb1 2048 41943039 20970496 83 Linux</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): d</span><br><span class="line">Selected partition 1</span><br><span class="line">Partition 1 is deleted</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/vdb: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x9277b47b</span><br><span class="line">Device Boot Start End Blocks Id System</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">WARNING: Re-reading the partition table failed with error 16: Device or resource busy.</span><br><span class="line">The kernel still uses the old table. The new table will be used at</span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure>
<h3 id="使用fdisk命令新建分区。"><a href="#使用fdisk命令新建分区。" class="headerlink" title="使用fdisk命令新建分区。"></a>使用fdisk命令新建分区。</h3><p>运行<code>fdisk -u /dev/vdb</code>：分区数据盘。<br>输入p：打印分区表。<br>输入n：新建分区。<br>输入p：选择分区类型为主分区。<br>输入&lt;分区号&gt;：选择分区号。本示例选取了1。警告 新分区的起始位置必须和旧分区的起始位置相同，结束位置必须大于旧分区的结束位置，否则会导致扩容失败。<br>输入w：保存修改并退出。<br>本示例中，将/dev/vdb1由20 GiB扩容到40 GiB。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ecshost ~]<span class="comment"># fdisk -u /dev/vdb</span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/vdb: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x9277b47b</span><br><span class="line">Device Boot Start End Blocks Id System</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">p primary (0 primary, 0 extended, 4 free)</span><br><span class="line">e extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): 1</span><br><span class="line">First sector (2048-83886079, default 2048):</span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-83886079, default 83886079):</span><br><span class="line">Partition 1 of <span class="built_in">type</span> Linux and of size 30 GiB is <span class="built_in">set</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/vdb: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x9277b47b</span><br><span class="line">Device Boot Start End Blocks Id System</span><br><span class="line">/dev/vdb1 2048 62916607 31457280 83 Linux</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure>
<p>运行<code>lsblk /dev/vdb</code>确保分区表已经增加。<br>运行<code>e2fsck -n /dev/vdb1</code>再次检查文件系统，确认扩容分区后的文件系统状态为<code>clean</code>。<br>通知内核更新分区表。运行<code>partprobe &lt;dst_dev_path&gt;</code>或者<code>partx -u &lt;dst_dev_path&gt;</code>（使用这个）示例：<code>partx -u /dev/vdc</code>，以通知内核数据盘的分区表已经修改，需要同步更新。  </p>
<h3 id="扩容文件系统"><a href="#扩容文件系统" class="headerlink" title="扩容文件系统"></a>扩容文件系统</h3><p>ext*文件系统（例如ext3和ext4）：运行<code>resize2fs /dev/vdb1</code>并重新挂载分区（不需要重新挂载分区）。  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ecshost ~]<span class="comment"># resize2fs /dev/vdb1</span></span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Resizing the filesystem on /dev/vdb1 to 7864320 (4k) blocks.</span><br><span class="line">The filesystem on /dev/vdb1 is now 7864320 blocks long.</span><br><span class="line">[root@ecshost ~]<span class="comment"># mount /dev/vdb1 /mnt</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>运维</category>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么精英都是时间控</title>
    <url>/posts/8aa51ed9.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>精英</category>
      </categories>
      <tags>
        <tag>时间控</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么精英都是清单控</title>
    <url>/posts/766456ef.html</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2020/12/13/AG8dDjfcS7r4Psm.png" alt="《为什么精英都是清单控》.png"></p>
]]></content>
      <categories>
        <category>精英</category>
      </categories>
      <tags>
        <tag>清单控</tag>
      </tags>
  </entry>
  <entry>
    <title>代理设置</title>
    <url>/posts/90972878.html</url>
    <content><![CDATA[<h2 id="Windows设置（适用win7-win10）"><a href="#Windows设置（适用win7-win10）" class="headerlink" title="Windows设置（适用win7 win10）"></a>Windows设置（适用win7 win10）</h2><blockquote>
<p>注意：这个方法适用于公司网线连接和wifi连接，方式一和方式二任选一种都可以</p>
</blockquote>
<h3 id="方式一：脚本"><a href="#方式一：脚本" class="headerlink" title="方式一：脚本"></a>方式一：脚本</h3><p><img src="https://i.loli.net/2020/11/12/TAOxkeHcyf51EXi.png" alt="20201112152855.png"><br>将上面的两个文件StartVpnOnClick.bat，StopVpnOnClick.bat保存到电脑上。<br>需要开启VPN时双击StartVpnOnClick.bat文件，<br>关闭VPN时双击StopVpnOnClick.bat文件。</p>
<p>StartVpnOnClick.bat 编码：ANSI</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem echo 开始设置上网代理</span><br><span class="line">reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; &#x2F;v ProxyEnable &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f</span><br><span class="line">reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; &#x2F;v ProxyServer &#x2F;d &quot;192.168.0.170:41080&quot; &#x2F;f</span><br><span class="line">rem echo 代理设置完成</span><br><span class="line">echo explorer.exe已关闭！</span><br><span class="line">taskkill &#x2F;im explorer.exe &#x2F;f</span><br><span class="line">echo 正在开启explorer.exe</span><br><span class="line">start &quot;&quot; &quot;C:\WINDOWS\explorer.exe&quot;</span><br><span class="line">echo explorer.exe已开启！</span><br><span class="line">ping -n 4 127.1&gt;nul</span><br><span class="line">rem pause&gt;nul</span><br></pre></td></tr></table></figure>

<p>StopVpnOnClick.bat 编码：ANSI</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem echo 开始取消代理上网</span><br><span class="line">reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; &#x2F;v ProxyEnable &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f </span><br><span class="line">reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; &#x2F;v ProxyServer &#x2F;d &quot;&quot; &#x2F;f </span><br><span class="line">rem echo 代理取消完成</span><br><span class="line"></span><br><span class="line">echo explorer.exe已关闭！</span><br><span class="line">taskkill &#x2F;im explorer.exe &#x2F;f</span><br><span class="line">echo 正在开启explorer.exe</span><br><span class="line">start &quot;&quot; &quot;C:\WINDOWS\explorer.exe&quot;</span><br><span class="line">echo explorer.exe已开启！</span><br><span class="line">ping -n 4 127.1&gt;nul</span><br><span class="line">rem pause&gt;nul</span><br></pre></td></tr></table></figure>



<h3 id="方式二：手动设置（win10）"><a href="#方式二：手动设置（win10）" class="headerlink" title="方式二：手动设置（win10）"></a>方式二：手动设置（win10）</h3><p>1、在右下角网络图标右键选择打开网络和Internet设置<br><img src="https://i.loli.net/2020/11/12/AMxgs8bTK5UIWCq.png" alt="20201112152921.png"></p>
<p>2、点击代理<br><img src="https://i.loli.net/2020/11/12/pgQAz2DwN1v3CI7.png" alt="20201112152937.png"></p>
<p>3、将使用代理服务器设置为开，输入地址：192.168.0.170，端口：41080.点击保存<br><img src="https://i.loli.net/2020/11/12/IFfOhAnlC4z3W5t.png" alt="20201112153003.png"></p>
<p>4、如果出现了设置代理无法连接国内网络的情况，则需要取消代理。在代理中，将使用代理服务器开关设置为关就可以了。如下图：<br><img src="https://i.loli.net/2020/11/12/WQBVpK2twNfLGZn.png" alt="20201112153024.png"></p>
<h3 id="方式二：手动设置（win7）"><a href="#方式二：手动设置（win7）" class="headerlink" title="方式二：手动设置（win7）"></a>方式二：手动设置（win7）</h3><p>1、 找到Internet选项<br><img src="https://i.loli.net/2020/11/12/kM7oq4gGQiPh8HT.png" alt="20201112153253.png"></p>
<p>2、点击连接，局域网设置，勾选为LAN使用代理服务器，输入地址：192.168.0.170，端口：41080.点击确定，如下图：<br><img src="https://i.loli.net/2020/11/12/B8cXe7zot5xDaAd.png" alt="20201112153232.png"></p>
<p>3、如果出现了设置代理无法连接国内网络的情况，则需要取消代理。在局域网（LAN）设置中，将使用代理服务器下的为LAN使用代理服务器前的勾选取消掉，点击确定。如下图：<br><img src="https://i.loli.net/2020/11/12/iHcOQv9oGVElgJf.png" alt="20201112153217.png"></p>
<h2 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h2><h3 id="iphone"><a href="#iphone" class="headerlink" title="iphone"></a>iphone</h3><p>在手机的wifi设置中，找到配置代理<br><img src="https://i.loli.net/2020/11/12/CWGzZFyYJ3emklE.png" alt="20201112153116.png"></p>
<p>选择手动，输入服务器：192.168.0.170，端口：41080.点击存储保存设置<br><img src="https://i.loli.net/2020/11/12/qNtz1bXwLhJU5ke.png" alt="20201112153133.png"></p>
<h3 id="android"><a href="#android" class="headerlink" title="android"></a>android</h3><p>选择手动，输入服务器：192.168.0.170，端口：41080.点击保存<br><img src="https://i.loli.net/2020/11/12/nx6LtHuAvrdCS7J.png" alt="20201112153149.png"><br><img src="https://i.loli.net/2020/11/12/WeVDPgtKZCBv1GY.png" alt="20201112153202.png"></p>
<blockquote>
<p>注意：手机添加代理后如果连接国内网络比较卡的话需要取消代理或者使用另外一个没有添加代理的wifi来连接国内的网络就可以了</p>
</blockquote>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>每日备忘</title>
    <url>/posts/510c438a.html</url>
    <content><![CDATA[<h2 id="2020年11月09日"><a href="#2020年11月09日" class="headerlink" title="2020年11月09日"></a>2020年11月09日</h2><p>房间里的插板，统一收纳，不能造成火灾之类的</p>
]]></content>
  </entry>
  <entry>
    <title>父与子的编程之旅：与小卡特一起学Python（第2版）</title>
    <url>/posts/7c694ae8.html</url>
    <content><![CDATA[<blockquote>
<p>截止到2020年10月31日，第三版已出版,有时间的话，看完第二版再看第三版</p>
</blockquote>
<h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><p>指令（instruction）：下达给计算机的一个基本命令，通常要求计算机做某件特殊的事情。<br>GUI（graphical user interface）：图形用户界面<br>关键字（keyword）：作为python语言一部分的特殊词，也成为保留字（reserved word）<br>执行（executing）命令、指令或程序表示运行或者发生，这只是运行或发生的一种形象的说法  </p>
<h2 id="第1章"><a href="#第1章" class="headerlink" title="第1章"></a>第1章</h2><h3 id="测试题"><a href="#测试题" class="headerlink" title="测试题"></a>测试题</h3><ol>
<li>window-&gt;IDLE</li>
<li>打印</li>
<li>*</li>
<li>RESTART</li>
<li>执行    </li>
</ol>
<h3 id="动手试一试"><a href="#动手试一试" class="headerlink" title="动手试一试"></a>动手试一试</h3><p>1.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span></span><br></pre></td></tr></table></figure>

<p>2.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="string">&quot;My name is fleming&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;I was born 28 4, 1995&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;My favorite color is yellow&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="第2章"><a href="#第2章" class="headerlink" title="第2章"></a>第2章</h2><h3 id="测试题-1"><a href="#测试题-1" class="headerlink" title="测试题"></a>测试题</h3><ol>
<li>“或者’的是字符串</li>
<li>可以</li>
<li>不同</li>
<li>一样</li>
<li>不等同。’4’是字符串，而4是数字</li>
<li>b，变量不能以数字开头</li>
<li>字符串  </li>
</ol>
<h3 id="动手试一试-1"><a href="#动手试一试-1" class="headerlink" title="动手试一试"></a>动手试一试</h3><p>1.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span> number</span><br></pre></td></tr></table></figure>
<p>2.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="number">11</span></span><br><span class="line"><span class="built_in">print</span> number</span><br></pre></td></tr></table></figure>

<p>3.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">string = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="built_in">print</span> string</span><br></pre></td></tr></table></figure>

<p>4.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DayPerWeek = <span class="number">7</span></span><br><span class="line">HoursPerDay = <span class="number">24</span></span><br><span class="line">MinutePerHour = <span class="number">60</span></span><br><span class="line">DayPerWeek * HoursPerDay * MinutePerHour</span><br></pre></td></tr></table></figure>

<p>5.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DayPerWeek = <span class="number">7</span></span><br><span class="line">HoursPerDay = <span class="number">26</span></span><br><span class="line">MinutePerHour = <span class="number">60</span></span><br><span class="line">DayPerWeek * HoursPerDay * MinutePerHour</span><br></pre></td></tr></table></figure>

<h2 id="第3章"><a href="#第3章" class="headerlink" title="第3章"></a>第3章</h2><h3 id="测试题-2"><a href="#测试题-2" class="headerlink" title="测试题"></a>测试题</h3><ol>
<li>*</li>
<li>2</li>
<li>8%3</li>
<li>8.0/3 或者8/3.0</li>
<li>6 ** 4</li>
<li>1.7E7</li>
<li>0.0000456<h3 id="动手试一试-2"><a href="#动手试一试-2" class="headerlink" title="动手试一试"></a>动手试一试</h3></li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">35.37</span> * <span class="number">1.15</span> / <span class="number">3</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">12.5</span> * <span class="number">16.7</span></span><br><span class="line">(<span class="number">12.5</span> + <span class="number">16.7</span>) * <span class="number">2</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="第5章-输入"><a href="#第5章-输入" class="headerlink" title="第5章 输入"></a>第5章 输入</h2><p>raw_input()<br>str() int() float() type()</p>
<h3 id="动手试一试-3"><a href="#动手试一试-3" class="headerlink" title="动手试一试"></a>动手试一试</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">firstName = raw_input(<span class="string">&quot;Enter your first name:&quot;</span>)</span><br><span class="line">secondName = raw_input(<span class="string">&quot;Enter your second name:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span> firstName, secondName</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">length = <span class="built_in">float</span>(raw_input(<span class="string">&quot;请输入房间的长度（米）:&quot;</span>))</span><br><span class="line">width = <span class="built_in">float</span>(raw_input(<span class="string">&quot;请输入房间的宽度（米）:&quot;</span>))</span><br><span class="line">price = <span class="built_in">float</span>(raw_input(<span class="string">&quot;请输入每平方尺地毯的价格:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;覆盖整个房间需要：&quot;</span>, length * width, <span class="string">&quot;平方米的地毯&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;覆盖整个房间需要：&quot;</span>, length * width * <span class="number">9</span>, <span class="string">&quot;平方尺的地毯&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;地毯的总价格&quot;</span>, length * width * <span class="number">9</span> * price</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cent5 = <span class="built_in">int</span>(raw_input(<span class="string">&quot;有多少个5分币:&quot;</span>))</span><br><span class="line">cent2 = <span class="built_in">int</span>(raw_input(<span class="string">&quot;有多少个2分币:&quot;</span>))</span><br><span class="line">cent1 = <span class="built_in">int</span>(raw_input(<span class="string">&quot;有多少个1分币:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;零钱的面值：&quot;</span>, (cent5 * <span class="number">5</span> + cent2 * <span class="number">2</span> + cent1) / <span class="number">10</span>, <span class="string">&quot;元&quot;</span>,(cent5 * <span class="number">5</span> + cent2 * <span class="number">2</span> + cent1) % <span class="number">10</span>, <span class="string">&quot;分&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>软件整理</title>
    <url>/posts/c43f5235.html</url>
    <content><![CDATA[<h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><ul>
<li><p>chrome</p>
</li>
<li><p>使用Adobe的Acrobat Reader DC</p>
</li>
<li><p>PHPStorm</p>
</li>
<li><p>WebStorm</p>
</li>
<li><p>Git</p>
</li>
<li><p>nodejs</p>
</li>
<li><p>tortisegit</p>
</li>
<li><p>typero</p>
</li>
<li><p>xmind</p>
</li>
<li><p>网易邮箱大师</p>
</li>
<li><p>winRAR</p>
</li>
<li><p>player3</p>
</li>
<li><p>UltralISO</p>
</li>
<li><p>vm</p>
</li>
<li><p>微信</p>
</li>
<li><p>企业微信</p>
</li>
<li><p>QQ</p>
</li>
<li><p>plex</p>
</li>
<li><p>github</p>
</li>
<li><p>nodepad++</p>
</li>
<li><p>xshell</p>
</li>
<li><p>xftp</p>
</li>
<li><p>迅雷</p>
</li>
<li><p>fiddler2</p>
</li>
<li><p>project2016</p>
</li>
<li><p>office2013</p>
</li>
<li><p>有道词典</p>
</li>
</ul>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么精英都是Excel控（一）</title>
    <url>/posts/9ad956c0.html</url>
    <content><![CDATA[<blockquote>
<p>表格做的漂亮才值得信赖</p>
</blockquote>
<h2 id="一目了然的Excel"><a href="#一目了然的Excel" class="headerlink" title="一目了然的Excel"></a>一目了然的Excel</h2><blockquote>
<p>贯彻标准格式，是减少误算、提高内容的易理解性，以及客户信赖的基础。</p>
</blockquote>
<h3 id="正确格式的原则"><a href="#正确格式的原则" class="headerlink" title="正确格式的原则"></a>正确格式的原则</h3><p>1、杂乱无章的Excel</p>
<p><img src="https://i.loli.net/2020/12/13/uCGq58lfjnyXLYa.png" alt="企业微信截图_20201213172208.png"></p>
<p>2、简单易懂的Excel</p>
<h3 id="详细设置步骤"><a href="#详细设置步骤" class="headerlink" title="详细设置步骤"></a>详细设置步骤</h3><p>1、行高设定为18，默认行高为13.5，让文字的上下多出一点空间，让文字更容易阅读，也使表格呈现出简练的风格。</p>
<p><img src="https://i.loli.net/2020/12/13/oNjJK71R5q6pHVL.png" alt="企业微信截图_20201213174254.png"></p>
<ol>
<li>全选表格</li>
<li><code>开始</code>-&gt;<code>格式</code>-&gt;<code>行高</code></li>
</ol>
<p>2、英文字体设置为Arial，中文字体设置为默认的宋体，字体大小默认11，表格当中不应该使用大小不同的字体</p>
<ol>
<li>全选表格</li>
<li><code>开始</code>-&gt;<code>字体格式</code> <code>字体大小</code></li>
</ol>
<p>3、数字使用千分撇区隔，当金额比较大的时候，通常以<code>千元</code>作为单位，常见的位值基准为<code>千元</code> <code>百万元</code> <code>十亿元</code></p>
<ol>
<li>选中表格，单击右键</li>
<li>点击<code>,</code>号</li>
</ol>
<p>4、项目下的细项要缩排</p>
<p>把项目下的细项向右缩排，要缩排的栏栏宽设置为1。</p>
<ol>
<li>在表头点击单列</li>
<li><code>开始</code>-&gt;<code>格式</code>-&gt;<code>列宽</code>-&gt;设为1</li>
</ol>
<p>5、单位要自成1列</p>
<p>6、设置栏宽的原则</p>
<p>最右边插入一栏空白栏，能让表格看起来更舒服（栏宽设置为3）</p>
<p>5、项目名称，数字靠右对齐，列表向左对齐</p>
<p>6、框的上下粗，中间细为虚线</p>
<p>7、将表格背景设置为白色消除单元格之间的线</p>
<p>8、每行之间的层级关系宽度为1，合并单元格后输入的字靠左对齐</p>
<p>9、单位统一放在一栏</p>
<p>10、手动输入的数字改为蓝色</p>
<p>11、欲强调的单元格改为淡蓝色</p>
<p>完成效果图如下：</p>
<p><img src="../../img/excel/20201205212929.png"></p>
]]></content>
      <categories>
        <category>精英</category>
      </categories>
      <tags>
        <tag>Excel控</tag>
      </tags>
  </entry>
</search>
